#+OPTIONS: toc:nil -:nil H:6 ^:nil
#+EXCLUDE_TAGS: noexport
#+BEGIN_EXAMPLE
---
title: "Vim"
layout: notation
description: Nirvana
path: "/vim/"
---
#+END_EXAMPLE

[[https://github.com/cozywigwam/dotfiles/blob/master/.vimrc][dotfile]]

* Color

| =:edit $VIMRUNTIME/colors/README.txt=   | colorscheme authorship   |
| =:so $VIMRUNTIME/syntax/hitest.vim=     | see highlight groups     |
| =runtime syntax/colortest.vim=          | test color setup         |

* Command-Line mode

#+BEGIN_QUOTE
Command-Line mode "exposes us to the vestiges of ex." -Drew Neil
#+END_QUOTE

Start with =:= and use =<C-p>= and =<C-n>= to navigate and edit history.
Use =<C-f>= to open command-line history (cf. =q:=).

| =q:=        | command-line history               |
| =@:= =@@=   | repeat last command-line command   |

* Fold

=zM= | close all folds =zR= | open all folds

* Lists

| =:ju[mps]=   | jumplist        |
| =:changes=   | change list     |
| =:reg=       | registers       |
| =:ar[gs]=    | argument list   |
| =:cope[n]=   | quickfix list   |

** Quickfix list

| =]q= & =[q=   | up/down                 |
| =]Q= & =[Q=   | last/first              |
| =]]q= & =]]q= | next/prev file          |
| =]]Q= & =[[Q= | next/prev quickfix list |

* Marks

| =`[mark]=   | jump to [mark] line & col        |
| ='[mark]=   | jump to =[mark]= line            |
| =`[ `]=     | begin/end of previous yank/put   |
| =`< `>=     | " visual selection               |
| =`.=        | " last change                    |
| =`^=        | " last insert mode exit          |
| =`( `)=     | " sentence                       |
| =`{ `}=     | " paragraph                      |

* Misc

| =~=                       | swap case                                           |
| =:ver=                    | know thyself                                        |
| =!echo $VIMRUNTIME=       | you are here                                        |
| =<C-v><C-i>=              | insert a tab character                              |
| =<C-v>[unicode]=          | insert unicode                                      |
| =ga=                      | examine character at cursor                         |
| =<leader>fh=              | [custom] reveal syntax group for highlighting       |
| =:help cmdline-special=   | notes about % and #                                 |
| =:noh=                    | stop highlighting searches                          |
| =<C-r>[register]=         | (from input mode) insert contents of register       |
| =:h text-objects=         | word, sentence, paragraph, tag, b/), B/}, ], etc.   |
| =:h filename-modifiers=   | =%=, =%:p=, etc.                                    |
| =%=                       | current filename with relative path                 |
| =%:p=                     | current filename with full path                     |
| =%:p:h=                   | full path only                                      |
| =gx=                      | open URL under cursor                               |
| =<leader>fmap=            | [custom] list all mappings                          |
* Plugins
** Ctrl-P

| =?<CR>=         | open help                                         |
| =<C-b> <C-f>=   | cycle between modes                               |
| =<C-d>=         | toggle between full-path & filename only search   |
| =<C-p> <C-n>=   | prev/next searches                                |

** NERDTree

| =?=    | help                                     |
| =F2=   | [custom] open NERDTree (default width)   |
| =F3=   | [custom] toggle open/close               |
| =C=    | nav - down                               |
| =U=    | nav - up                                 |
| =u=    | nav - collapse tree & up                 |
| =CD=   | nav - go to pwd                          |
| =cd=   | update pwd                               |
| =P=    | jump to tree root                        |
| =p=    | jump to parent                           |
| =O=    | expand all sub-dirs                      |
| =X=    | collapse all sub-dirs                    |
| =I=    | toggle hidden                            |
| =R=    | refresh                                  |

* Registers

| =:h registers=   | naturally                                                 |
| =0=              | yank & delete                                             |
| =1=              | delete with =%=, =(=, =)=, =/=, =?=, =n=, =N=, ={=, =}=   |
| =-=              | small delete (< 1 line)                                   |
| =+=              | clipboard                                                 |
| =*=              | primary (or redundant clipboard in macOS)                 |
| ===              | expression                                                |
| =_=              | black hole                                                |
| =%= =#=          | filename, alt filename                                    |
| =/=              | last search pattern                                       |

* Search

| =:h /magic=             | literalism and escapism                                                   |
| =:h pattern-overview=   | atoms, character classes, etc.                                            |
| =//e=                   | repeat search and move cursor to end of highlight (character "offsets")   |
| =:%sno/<div>/<span/=    | "nomagic" substitution                                                    |
| =\C=                    | respect case (can go anywhere in pattern)                                 |
| =:set nowrapscan=       | prevent jump between bottom/top when searching                            |
| ={-}=                   | be ungreedy                                                               |
| =<=, =>=                | word boundaries                                                           |

Delete unwanted lines:

| =:g/^$/d=    |
| =:v/./d=     |
| =:g/^\s*$/d= |
| =:v/\S/d=    |

| =:h pattern-atoms= | help                                                  |
| =:h whitespace=    | and more help                                         |
| =\d=               | digit [0-9]                                           |
| =\D=               | non-digit [\^0-9]                                     |
| =\s=               | white space [ ] ( and )                               |
| =\_s=              | white space with newline                              |
| =\S=               | non-white characters [\^ ] (not and )                 |
| =\l=               | lowercase alpha [a-z]                                 |
| =\L=               | non-lowercase alpha [\^a-z]                           |
| =\u=               | uppercase alpha [A-Z]                                 |
| =\U=               | non-uppercase alpha [\^A-Z]                           |
| =\w=               | word character [0-9a-fA-F\_]                          |
| =\W=               | non-word character [\^0-9a-fA-F\_]                    |
| =\_x=              | "x" is any character class character but with newline |
| =\t=               | <tab>                                                 |
| =\r=               | <cr>, good for substitution                           |
| =\n=               | end-of-line, good for search                          |
| =~=                | last substitution string                              |
| =\1=, =\2=, ...    | parenthetical sub-expression/submatch                 |
| =\zs=, =ze=        | set start/end of match                                |

* Tabs & spaces

| =<leader>t?=                   | =:set ts? sts? sw?=                            |
| =<leader>t2=                   | =:set ts=2 sts=2 sw=2=                         |
| =<leader>t4=                   | =:set ts=4 sts=4 sw=4=                         |
| =tabstop (ts)=                 | How many columns a tab equals                  |
| =softtabstop (sts)=            | How many columns you get for inserting a tab   |
| =shiftwidth (sw)=              | # when shifting with angle brackets            |
| =expandtab/noexpandtab (et)=   | Expand tabs to become spaces                   |
| =retab=                        | Replace white-space with settings              |

To convert the full document's tabs to spaces, =:set expandtab= and then
=:retab!= (=!= includes "strings of only normal spaces" in the
conversion).

* Windows

| =:help ctrl-w=    | help                                         |
| =<C-w> ==         | equalize                                     |
| =<C-w> +/-=       | adjust height N                              |
| =<C-w> </>=       | adjust width N                               |
| =<C-w> ^=         | split with alternate                         |
| =<C-w> p=         | go to previous (last accessed) window        |
| =<C-w> s/v=       | split current window N lines/columns size    |
| =<C-w> W/w=       | go to N next/previous window (wrap around)   |
| =<C-w> _=         | "maximize" vertically                        |
| =<C-w> |=         | "maximize" horizontally                      |
| =<C-w> H/J/K/L=   | move window                                  |
| =<C-w> x=         | exchange with neighbor                       |
| =<C-w> r=         | rotate                                       |
| =<C-w> T=         | move current window to a new tab page        |
