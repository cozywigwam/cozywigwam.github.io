#+OPTIONS: toc:nil -:nil H:6 ^:nil
#+EXCLUDE_TAGS: noexport
#+STARTUP: content
#+BEGIN_SRC yaml
---
title: "Python"
layout: notation
description: Better Than Nokia Snake
path: "/python/"
---
#+END_SRC

* Books :noexport:
** Doing Math with Python

https://nostarch.com/doingmathwithpython

*** Chapter 1

**** Check if number is a factor

#+BEGIN_SRC python
def is_factor2(a, b):
    if b % a == 0:
        return True
    else:
        return False
#+END_SRC

#+BEGIN_SRC python
def factors(b):
    for i in range(1, b+1):
        if b % i == 0:
            print(i)
#+END_SRC

**** print a multiplication table

#+BEGIN_SRC python
def mult_table(x):
    for i in range(1,12):
        print('{0} x {1} = {2}').format(x, i, x * i)
#+END_SRC

**** convert C to F

Celsius is five ninths of normalized Fahrenheit (F - 32). Fahrenheit is 32 on top of nine fifths of Celsius.

#+BEGIN_SRC python
def f_to_c(f):
    return (f - 32) * 5 / 9

def c_to_f(c):
    return ((c * 9 / 5) + 32)
#+END_SRC

**** find quadratic equation roots

\begin{array}{*{20}c} {x = \frac{{ - b \pm \sqrt {b^2 - 4ac} }}{{2a}}} & {{\rm{when}}} & {ax^2 + bx + c = 0} \\ \end{array}

* Misc
** Machine Learning

from Vlad:

[[https://medium.com/@ageitgey/how-to-break-a-captcha-system-in-15-minutes-with-machine-learning-dbebb035a710][How to break a CAPTCHA system in 15 minutes with Machine Learning]]
How to break a CAPTCHA system in 15 minutes with Machine Learning

** Math
*** Rounding up

[[https://stackoverflow.com/a/23590097/1052412][SO answer]] to avoid ~import math~

#+BEGIN_SRC python
int(21 / 5)
int(21 / 5) + (21 % 5 > 0)

# integer division
21 // 5 + (21 % 5 > 0)
#+END_SRC
* Language
** Class

 https://www.tutorialspoint.com/python/python_classes_objects.htm

 #+BEGIN_SRC python
class Employee:
   'Common base class for all employees'
   empCount = 0

   def __init__(self, name, salary):
      self.name = name
      self.salary = salary
      Employee.empCount += 1

   def displayCount(self):
     print "Total Employee %d" % Employee.empCount

   def displayEmployee(self):
      print "Name : ", self.name,  ", Salary: ", self.salary
 #+END_SRC

** Dictionaries

 moving items from one list to another

 #+BEGIN_SRC python
listA = ['a', 'b', 'c']
listB = []

while listA:
  popped = listA.pop()
  print(popped.title())
  print("popped " + popped)
  print("popped.title() " + popped.title())
  listB.append(popped)

print(listB)
 #+END_SRC
* Reference

[[https://norvig.com/python-lisp.html][Python for Lisp Programmers]], by Peter Norvig
